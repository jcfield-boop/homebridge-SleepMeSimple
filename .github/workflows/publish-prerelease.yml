name: Publish Prerelease

on:
  workflow_dispatch:
    inputs:
      prerelease_type:
        description: 'Prerelease identifier'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - dev
          - alpha
      increment_type:
        description: 'Version increment type'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor

jobs:
  publish-prerelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org/'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Update prerelease version
        id: version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Set prerelease identifier
          PRERELEASE_TYPE="${{ github.event.inputs.prerelease_type }}"
          INCREMENT_TYPE="${{ github.event.inputs.increment_type }}"
          
          # Update version - simplify the logic to use standard npm commands
          if [[ "$INCREMENT_TYPE" == "prerelease" ]]; then
            # Check if current version already has this prerelease type
            if [[ "$CURRENT_VERSION" == *"-$PRERELEASE_TYPE."* ]]; then
              # Increment the prerelease number
              npm version prerelease --preid="$PRERELEASE_TYPE" --no-git-tag-version
            else
              # Create a new prerelease by first bumping the patch version
              # then setting the prerelease identifier
              npm version patch --no-git-tag-version
              npm version prerelease --preid="$PRERELEASE_TYPE" --no-git-tag-version
            fi
          elif [[ "$INCREMENT_TYPE" == "prepatch" ]]; then
            npm version prepatch --preid="$PRERELEASE_TYPE" --no-git-tag-version
          elif [[ "$INCREMENT_TYPE" == "preminor" ]]; then
            npm version preminor --preid="$PRERELEASE_TYPE" --no-git-tag-version
          elif [[ "$INCREMENT_TYPE" == "premajor" ]]; then
            npm version premajor --preid="$PRERELEASE_TYPE" --no-git-tag-version
          fi
          
          # Get the new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $NEW_VERSION with tag: $PRERELEASE_TYPE"
      
      - name: Build
        run: npm run build
      
      - name: Create Git Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "Bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
          git tag -a "v${{ steps.version.outputs.new_version }}" -m "Version ${{ steps.version.outputs.new_version }}"
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish to npm with prerelease tag
        run: npm publish --tag ${{ github.event.inputs.prerelease_type }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
